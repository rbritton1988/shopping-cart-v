// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeygoShoppingCart.Domain;

namespace VeygoShoppingCart.Domain.Migrations
{
    [DbContext(typeof(EFCoreContext))]
    partial class EFCoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.CartDiscount", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("integer");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasKey("ShoppingCartId", "DiscountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("CartDiscounts");
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.CartItem", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ShoppingCartId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FIRST15UK",
                            Description = "Save 15% on Your Order",
                            Percentage = 0.14999999999999999
                        },
                        new
                        {
                            Id = 2,
                            Code = "VC08AURX7G",
                            Description = "Save 20% on Your Order",
                            Percentage = 0.20000000000000001
                        },
                        new
                        {
                            Id = 3,
                            Code = "VC08A9VSK7",
                            Description = "Save 5% on Your Order",
                            Percentage = 0.050000000000000003
                        });
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Containing a hand-chosen variety of our most popular vegetables (see product information below for items). The contents will change every month to reflect the seasonality of the produce, but will always include staples such as onions and potatoes, as well as seasonal ‘stars’.",
                            Name = "VEGETABLE SELECTION BOX - SMALL",
                            Price = 11.49m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Containing a hand-chosen variety of our most popular salad (see product information below for items). Contents will change every month to reflect the seasonality of the produce, but will always include popular items such salad potatoes, tomatoes and lettuce as well as seasonal ‘stars’.",
                            Name = "SALAD SELECTION BOX - MEDIUM",
                            Price = 17.95m
                        });
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Complete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric")
                        .HasDefaultValue(0.00m);

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.CartDiscount", b =>
                {
                    b.HasOne("VeygoShoppingCart.Domain.Models.Discount", "Discount")
                        .WithMany("CartDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeygoShoppingCart.Domain.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartDiscounts")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeygoShoppingCart.Domain.Models.CartItem", b =>
                {
                    b.HasOne("VeygoShoppingCart.Domain.Models.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeygoShoppingCart.Domain.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
